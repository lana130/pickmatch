<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team">
<!-- 팀자유게시판 / 팀자유게시판 페이징처리 -->
 	<select id="selectCount" resultType="_int">
 		select count(*) from TeamBoard
 	</select>
 	<select id="selectList" resultType="team">
 		select A.*,(select count(*) from TEAMBOARDATTACHMENT where A.boardno=boardno) filecount from teamboard A where teamname=#{teamName} order by boarddate desc
 	</select>
 	
 	<!-- 팀자유게시판 상세보기 -->
 	<select id="selectteamBoard" parameterType="_int" resultType="team">
		select * from teamboard where boardno=#{boardNo}
	</select>
	<select id="selectAttachment" parameterType="_int" resultType="com.kh.pickmatch.model.vo.TeamBoardAttachment">
		select * from teamboardattachment where boardnoref=#{boardNo}
	</select>
	
	<select id="selectMatchCount" parameterType="string" resultType="_int">
		select count(*) from match where teamhome = #{teamName} or teamaway = #{teamName}
	</select>
 	
 	
 	<!-- 팀 공지사항 -->
 	<select id="selectCountN" resultType="_int">
 		select count(*) from TeamNotice where teamname=#{teamName}
 	</select>
 	<select id="selectListN" resultType="teamnotice">
 		select * from teamnotice where teamname=#{teamName} order by noticedate desc 
 	</select>
 	
 	<!-- 팀 공지사항 상세보기 -->
 	<resultMap id="teamnoticemap" type="teamnotice">
		<result column="noticeno" property="noticeNo"/>
		<result column="noticetitle" property="noticeTitle"/>
		<result column="memberid" property="memberId"/>
		<result column="noticedate" property="noticeDate"/>
		<result column="noticereadcount" property="noticeReadCount"/>
		<result column="teamname" property="teamName"/>
	</resultMap>
 	
 	
 	<select id="selectNoticeView" parameterType="teamnotice" resultMap="teamnoticemap">
		select * from teamnotice where noticeno=#{noticeNo}
	</select>
 	
 	
 	
 	<!-- 팀 공지사항 글쓰기 -->
 	<insert id="insertNotice"  parameterType="teamnotice">
 		insert into teamnotice values(seq_teamnoticeno.nextval,#{noticeTitle},#{memberId},#{noticeContent},default,default,#{teamName})
 	</insert>

 	<!-- 팀 공지사항 글삭제 -->
 	<delete id="deleteNotice">
 		delete from teamnotice where noticeno=#{noticeNo}
 	</delete>
 	
 	<!-- 팀 공지사항 수정 -->
 	<select id="selectOne" resultType="teamnotice">
 		select * from teamnotice where noticeno=#{noticeNo}
 	</select>
 	
 	<update id="updateNotice" parameterType="teamnotice">
 		update teamnotice set noticetitle=#{noticeTitle}, noticecontent=#{noticeContent} where noticeno=#{noticeNo}
 	</update>
 	
 	<!-- 팀 생성 -->
 	<insert id="InsertTeam" parameterType="teamcreate">
 		insert into team values(#{teamName},default,#{teamLocation},#{teamField},#{teamType},#{teamColor},#{teamContent},default,#{teamEmblem},default)
 	</insert>
 	
 	<select id="selectTeamCheck" resultType="teamcreate">
 		select * from team where teamname=#{teamname}
 	</select>
 	
 	<!-- 팀생성시 자동팀장등록 -->
 	<insert id="memberByTeam" parameterType="mbt">
 		insert into memberbyteam values(#{memberId},#{teamName},#{authority},sysdate,null,default)
 	</insert>
 	
 	
 	<!-- 팀 랭킹 -->
 	<select id="selectCountT" resultType="_int">
 		select count(*) from team
 	</select>
 	<select id="selectTeamRanking"  resultType="teamcreate">
 		 SELECT * FROM (SELECT ROWNUM AS rank, A.* FROM (SELECT * FROM team join score using(teamname) where teamstatus = 'Y' ORDER BY teamrating DESC) A) 
 	</select>
 	<!-- 팀검색 -->
 	<select id="TeamSearch" resultType="teamcreate">
 		SELECT * FROM (SELECT ROWNUM AS rank, A.* FROM (SELECT * FROM team ORDER BY teamrating DESC) A) team where teamname like '%'||#{search}||'%' or teamlocation like '%'||#{search}||'%'
 	</select>
 	
 	
 	<!-- 용병랭킹 -->
 	<select id="selectCountM" resultType="_int">
 		select count(*) from mercenary
 	</select>
 	<select id="selectmercenaryranking"  resultType="mercenary">
 		 SELECT * FROM (SELECT ROWNUM AS rank, A.* FROM (SELECT * FROM mercenary join member using(memberid) ORDER BY goalcount DESC) A) 
 	</select>
 	
 	<!-- 용병검색 -->
 	<select id="MercenarySearch" resultType="mercenary">
 		SELECT * FROM (SELECT ROWNUM AS rank, A.* FROM (SELECT * FROM mercenary join member using(memberid) ORDER BY goalcount DESC) A) mercenary where memberid like '%'||#{search} ||'%' or teamName like '%'||#{search}||'%'
 	</select>
 	
 	<!-- 내팀정보 보여주기 -->
 	<select id="TeamView" resultType="teamcreate">
 		select * from team where teamname=#{teamName}
 	</select>
 	
 	<!-- 내팀정보 팀원수 -->
 	<select id="memberCount" resultType="_int">
 		select count(*) as memberCount from memberbyteam where teamname=#{teamName}
 	</select>
 	<select id="TeamMember" resultType="mbt">
 		select * from(select rownum as no, a.* from (select * from memberbyteam join member using(memberid) where teamname=#{teamName})a)
 	</select>
 	
 	<!-- 팀가입 신청현황 -->
 	<select id="MemberRequest" resultType="mbr">
 		 select * from (select rownum as no, a.* from(select * from memberrequest join member using(memberid) where teamname=#{teamName} and requesttype='팀')a)
 	</select>
 	
 	<!-- 팀가입 승인 -->
 	<insert id="teamOk" parameterType="mbr">
 		insert into memberbyteam values(#{memberId},#{teamName},'팀원',sysdate,null,0)
 	</insert>
 	
 	<!-- 팀가입 거절 -->
 	<delete id="teamNo" parameterType="mbr">
 		delete from memberrequest where memberid=#{memberId} and teamname = #{teamName} and requesttype = #{requestType}
 	</delete>
 	
 	<!-- 팀가입 신청 -->
 	<insert id="teamJoin" parameterType="member">
 		insert into memberrequest values(seq_memberrequest_no.nextval, #{memberId},#{teamName},sysdate,#{position})
 	</insert>
 	
 	<!-- 팀가입신청시 멤버리퀘스트테이블 비교 -->
 	<select id="memberRequestCk" parameterType="mbr" resultType="mbr">
 		select * from memberrequest where memberid=#{memberId} and teamname=#{teamName} and requesttype = #{requestType}
 	</select>
 	
 	<!-- 팀게시판 글쓰기 -->
 	<!-- 자유게시판 insert 및 attachment insert -->
  	<insert id="insertFreeBoard" parameterType="team">
  		insert into teamboard values (SEQ_TEAMBOARDNO.nextval,#{teamName}, #{boardTitle}, #{memberId}, #{boardContent}, sysdate, default)
  		<selectKey keyProperty="boardNo" resultType="_int" order="AFTER">
  			select SEQ_TEAMBOARDNO.currval from dual
  		</selectKey>  	
  	</insert>
  	<insert id="insertFreeAttachment" parameterType="teamboardattachment">
  		insert into teamboardattachment values(SEQ_FREEBOARDATTACHMENTNO.nextval,#{originalFileName},#{boardNoRef},#{renamedFileName})
  	</insert>
 	
 	<!-- 팀 게시판 수정 -->
 	<update id="updateTeamBoard" parameterType="team">
 		update teamboard set boardtitle=#{boardTitle}, boardcontent=#{boardContent} where boardno=#{boardNo}
 	</update>
 	
 	<!-- 팀 게시판 글 삭제 -->
 	<delete id="deleteTeamBoard">
 		delete from teamboard where boardno=#{boardNo}
 	</delete>
 	
 	<!-- 팀 추방 -->
 	<delete id="teambye">
 		delete from memberbyteam where memberid=#{memberId}
 	</delete>
 	
 	<!-- 매니저를 팀원으로 등급조절 -->
 	<update id="leveldown">
 		update memberbyteam set authority='팀원' where memberid=#{memberId}
 	</update>
 	
 	<!-- 팀원을 매니저로 등급조절 -->
 	<update id="levelup">
 		update memberbyteam set authority='매니저' where memberid=#{memberId}
 	</update>
 	
 	<!-- 팀장위임 -->
 	<update id="teamleader">
 		update memberbyteam set authority='팀장' where memberid=#{memberId}
 	</update>
 	<select id="leadercheck" resultType="String">
 		select memberId from memberbyteam where teamname=#{teamName} and authority = '팀장'
 	</select>
 	<!-- 팀장 매니저로 강등 -->
 	<update id="leaderchange">
 		update memberbyteam set authority='매니저' where memberid=#{beforeleader}
 	</update>
 	<select id="authority" resultType="String">
 		select authority from memberbyteam where memberid=#{memberId}
 	</select>
 	
 	<!-- 팀탈퇴 -->
 	<delete id="teamleave">
 		delete from memberbyteam where memberid=#{memberId}
 	</delete>
 	
 	<!-- 팀해체 -->
 	<update id="teambreakup">
 		update team set teamstatus='N' where teamname=#{teamName}
 	</update>
 	
 	<!-- 팀게시판 댓글리스트 -->
 	<select id="tbcView" resultType="tbc">
 		select * from teamboardcomment where boardnoref=#{boardNo}
 	</select>
 	
 	<!-- 팀게시판 댓글insert -->
 	<insert id="insertTeamBoardComment" parameterType="tbc">
 		insert into teamboardcomment values(SEQ_TEAMBOARDCOMMENTNO.nextval,#{memberId},#{commentContent},#{boardNoRef},#{commentNoRef})
 	</insert>
 	
 	<!-- 팀게시판 댓글 삭제 -->
 	<delete id="deleteComment">
 		delete from teamboardcomment where commentNo=#{commentNo}
 	</delete>
 	
</mapper>
