<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team">
	
	<select id="selectTMemberList" parameterType="map" resultType="map">
		select m.membername, m.nickname, m.position, mt.authority, memberId
		from memberbyteam mt
		join member m using(memberid)
		where mt.teamname = #{teamName} and ((exitdate is null and mt.enrolldate <![CDATA[<=]]> to_date(last_day(#{currentDate}))) or (exitdate <![CDATA[>]]> to_date(#{currentDate}) and mt.enrolldate <![CDATA[<=]]> to_date(last_day(#{currentDate}))))
	</select>
	
	<select id="selectAccountOne" parameterType="string" resultType="account">
		select * from teamoperationaccount where teamname = #{teamName}
	</select>
	
 	<select id="selectTeamOne" parameterType="string" resultType="string">
 		select teamName from memberbyteam where exitdate is null and memberid = #{memberId}
 	</select>
	
	<select id="selectTeamAuthorityOne" parameterType="string" resultType="string">
		select authority from memberbyteam where exitdate is null and memberid = #{memberId}
	</select>
	
	<select id="selectMoneyHistoryList" parameterType="string" resultType="map">
		select mh.inouttype, m.membername, m.nickname, mh.money, mh.content, mh.inoutdate
		from moneyhistory mh
		join member m using(memberid)
		where teamname = #{teamName} and inoutdate <![CDATA[>=]]> to_date(#{currentDate}) and inoutdate <![CDATA[<=]]> to_date(last_day(#{currentDate}))
		order by inoutdate desc
	</select>
	
	<update id="updateTeamAccount" parameterType="account">
		update teamoperationaccount set accountholder = #{accountHolder}, bankname = #{bankName}, accountnumber = #{accountNumber}, money = #{money} where teamname = #{teamName}
	</update>
	
	<insert id="insertTeamAccount" parameterType="account">
		insert into teamoperationaccount values(#{teamName}, #{accountHolder}, #{bankName}, #{accountNumber}, #{money}, default)
	</insert>
	
	<insert id="insertMHistory" parameterType="mHistory">
		insert into moneyhistory values(SEQ_MONEYHISTORYNO.nextval, #{teamName}, #{memberId}, #{inoutType}, #{money}, sysdate, #{content})
	</insert>
	
	<select id="selectOneMatch" parameterType="_int" resultType="match">
		select * from match where matchno = #{matchNo}
	</select>
		
	<select id="selectOneHomeTeam" parameterType="string" resultType="com.kh.pickmatch.model.vo.Team">
		select * from team where teamname = #{teamHome}
	</select>
	
	<select id="selectOneAwayTeam" parameterType="string" resultType="com.kh.pickmatch.model.vo.Team">
		select * from team where teamname = #{teamAway}
	</select>
		
	<select id="selectMatchList" parameterType="string" resultType="match">
		select * from match where (teamhome = #{teamName} or teamaway = #{teamName}) and (teamhome is not null and teamaway is not null) order by matchdate desc
	</select>

	<insert id="insertMatchGoalResult" parameterType="mgr">
		insert into matchgoalresult values(seq_goalno.nextval, #{teamName}, #{matchNo}, #{memberId}, #{goalTime})
	</insert>
	
	<update id="updateScore" parameterType="score">
		update score set totalplaycount = totalplaycount + #{totalPlayCount}, win = win + #{win}, draw = draw + #{draw}, lose = lose + #{lose} where teamname = #{teamName}
	</update>
	
	<update id="updateTeamRating" parameterType="map">
		update team set teamrating = teamrating + #{teamRating} where teamname = #{teamName}
	</update>
	
	<update id="updateMatchScore" parameterType="map">
		update match set homescore = #{homeScore}, awayscore = #{awayScore}, result = 'Y' where matchno = #{matchNo}
	</update>
	
	<insert id="insertMatchResultDetail" parameterType="map">
		insert into matchresultdetail values(#{matchNo}, #{matchContent})
	</insert>
	
	<select id="selectMatchGoalResultList" parameterType="_int" resultType="map">
		select goalno, teamname, matchno, memberid, goaltime, b.membername from matchgoalresult join member b using(memberid) where matchno = #{matchNo} order by goaltime
	</select>
	
	<select id="selectMatchResultDetail" parameterType="_int" resultType="string">
		select matchcontent from matchresultdetail where matchno = #{matchNo}
	</select>
	
	<select id="selectMercenaryList" parameterType="map" resultType="map">
		select membername, nickname, position, memberid, teamname
		from member m
		join mercenary mc using(memberid)
		where teamname = #{teamName} and mc.status = 'Y'
	</select>
	
	<select id="selectTeamEmblemOne" parameterType="string" resultType="string">
		select teamemblem from team where teamname = #{teamName}
	</select>
	
	<update id="updateTeamInfo" parameterType="com.kh.pickmatch.model.vo.Team">
		update team set teamlocation = #{teamLocation}, teamfield = #{teamField}, teamType = #{teamType}, teamColor = #{teamColor}, teamcontent = #{teamContent} where teamname = #{teamName}
	</update>
	
	<select id="selectMercenaryCount" parameterType="mercenary" resultType="_int">
		select count(*) from mercenary where memberid = #{memberId} and teamname = #{teamName} and status = 'Y'
	</select>
	
	<select id="selectMemberReuestList" parameterType="string" resultType="map">
		select *
		from memberrequest
		join member using(memberid)
		where teamname = #{teamName} and requesttype = '용병' order by requestdate desc
	</select>
	
	<select id="selectMercenaryManagementList" parameterType="string" resultType="map">
		select *
		from mercenary m
		join member using(memberid)
		where teamname = #{teamName} and m.status = 'Y'
	</select>
	
	<insert id="insertMercenary" parameterType="map">
		insert into mercenary values(#{memberId}, #{teamName}, default, default)
	</insert>
	
	<delete id="deleteTeamMercenary" parameterType="map">
		delete from mercenary where memberid = #{memberId} and teamname = #{teamName}
	</delete>
	
	<select id="selectMyTeamMercenaryList" parameterType="string" resultType="map">
		select teamname, memberid, teamrating, teamlocation, teamtype, teamcolor, teamcontent, openingdate from mercenary join team using(teamname) where memberid = #{memberId} order by teamrating desc
	</select>

</mapper>
